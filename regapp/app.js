const express       = require("express");const _             = require("lodash");const ejs           = require("ejs");const bodyParser    = require("body-parser");const session       = require("express-session");const path          = require("path");const mongoose      = require("./server/db/mongoose");const {User}        = require("./server/models/UserSchema");const app = express();app.use(bodyParser.urlencoded({ extended: true }));app.use(bodyParser.json())app.engine('html', require('ejs').renderFile);app.set('view engine', 'html');app.use(session({    secret: 'secret',    resave: false,    saveUninitialized: false}));const auth = (req, res, next) => {    User.findOne({username: req.session.username})        .exec(function (error, user) {            if (error) {                return next(error);            } else {                if (user === null) {                    res.redirect('/login')                } else {                    return next();                }            }        });};app.get('/registration', (req, res)=>{    res.sendFile(path.join(__dirname, '/', 'registration.html'));});app.get('/login', (req, res)=>{    res.sendFile(path.join(__dirname, '/', 'login.html'));});app.get("/context", auth, (req, res) => {    res.sendFile(path.join(__dirname, '/', 'success.html'));});app.get('/logout', function (req, res) {    req.session.destroy();    res.send("logout success!");});app.post("/login", (req, res) => {    const {username, password} = req.body;    User.findOne({username})        .then ( doc => {            if(_.isEmpty(doc))                return res.redirect(402, '/registration');            else if(doc.validPassword(password)){                req.session.username = username;            }else if(doc.password !== password){                return res.sendStatus(202);            }        })        .then( () => {            return res.redirect(200, '/context');        })        .catch( e => console.log(e) );});app.post('/registration', (req, res) => {    User.findOne({username: req.body.username} , (err, doc) => {        if( !_.isEmpty(doc))            throw new Error("user exist");        })        .then( () => {            const user = new User();            user.username = req.body.username;            user.password = user.generateHash(req.body.password);            user.save();        })        .then( () => {            req.session.username = req.body.username;            return res.sendStatus(200);        })        .catch((e) => {            console.log(e);            return res.sendStatus(400);        });});app.use(function(req, res, next) {    res.status(404).send("404 error");});app.listen(3000, () => {    console.log("3000 port");});